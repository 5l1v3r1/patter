#!/usr/bin/env python

import argparse
import toml
from patter import Evaluator, ModelFactory
from patter.data import AudioDataset


def get_parser():
    parser = argparse.ArgumentParser(description="Patter STT Test")
    parser.add_argument("model_path", help="Path to model to test")
    parser.add_argument("--test-config", required=True, help="Configuration file specifying testing parameters")
    parser.add_argument("--progress", action="store_true", help="If true, display progress bars, else use text output")

    return parser


def main():
    args = get_parser().parse_args()

    # load configuration
    with open(args.test_config, "r") as fh:
        testing_config = toml.load(fh)

    # initialize the model to test
    model = ModelFactory.load(args.model_path)

    # set up trainer and corpus
    evaluator = Evaluator.load(testing_config, tqdm=args.progress)

    # load the corpora
    test_corpus = AudioDataset.from_config(testing_config, model.input_cfg, model.labels, manifest="test")

    # kick off the test
    wer, cer = evaluator.eval(model, test_corpus)
    print('Test Summary \t'
          'Average WER {wer:.3f}\t'
          'Average CER {cer:.3f}\t'.format(wer=wer, cer=cer))


if __name__ == '__main__':
    main()
