#!/usr/bin/env python

import argparse
import toml
from patter import Trainer, ModelFactory
from patter.util import SpeechCorpus


def get_parser():
    parser = argparse.ArgumentParser(description="Patter STT Trainer")
    parser.add_argument("--corpus-config", required=True, help="Configuration file specifying corpus")
    parser.add_argument("--training-config", required=True, help="Configuration file specifying training parameters")
    parser.add_argument("--model-path", required=False, help="Begin training with this model")
    parser.add_argument("--model-config", required=False, help="Configuration file specifying model settings")

    return parser


def main():
    args = get_parser().parse_args()

    # load configurations
    with open(args.corpus_config, "r") as fh:
        corpus_config = toml.load(fh)
    with open(args.model_config, "r") as fh:
        model_config = toml.load(fh)
    with open(args.training_config, "r") as fh:
        training_config = toml.load(fh)

    trainer = Trainer.load(training_config)
    corpus = SpeechCorpus.load(corpus_config)
    model = ModelFactory.create(model_config)

    trainer.train(model, corpus)


if __name__ == '__main__':
    main()
